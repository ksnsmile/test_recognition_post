import re

ocr_texts = [
    '2023-09-13', '접수일지-:2023-99-13--', 'no.11-2', '363-4708-7851', '주문번호',
    '221101117094', '2023091221101117894', '(주)헬레파츠 1600-8749 /1600-8749', 
    'e 서울금천구가산동[서부셋길606]', '543-1 (대성디플리스지식산염센', '하', '터)510호', 
    '343', '인', '신용- (b)---', '09990600088-외-', '박진--010-9176-777 /010-9176--', 
    '수', '경기의왕시월암동[철도박물관로176]', '360-1 -(월암동 한국철도기술', '1/010-9010-1325 3 연구원)주    용박진착', 
    '749-', '510호', '신용 (b) 1', '0신', 'p88 외', '동101호박진', '송', '244.(주레패]',
    '363-4708-7851', '0 600-87 9/1610', '이상', '신용 (b)1', '인', 'b5-343', '김열시', 
    '박진학 010-912', 'i-8328 /010-9176-8328', '경기의왕시 월암(동[철도박물관로176]', 
    '수', '360-1', '(월암동 한국철도기술연구원) 7', '하', '동101호텍진학 [칠도박물관로176]', 
    '[월암동]', '인', '[36347087851]'
]

광역자치단체_패턴 = r"(서울|서울시|서울특별시|인천|인천시|인천광역시|부산|부산시|부산광역시|대구|대구시|대구광역시|광주|광주시|광주광역시|대전|대전시|대전광역시|울산|울산시|울산광역시|세종|세종시|세종특별자치시|경기|경기도|강원|강원도|강원특별자치도|충북|충청북도|충남|충청남도|전북|전라북도|전남|전라남도|경북|경상북도|경남|경상남도|경상도|제주|제주도|제주특별자치도)"
기초자치단체_패턴 = r"([가-힣]+(?:시|군|구))"
읍면동_패턴 = r"([가-힣]+[?:읍|면|동])"
도로명주소_패턴 = r"([가-힣]+(?:로|길))"
건물번호_패턴 = r"([가-힣]+(?:로|길))\s*(\d+(?:-\d+)?)"
지번주소_패턴 = r"([가-힣]+(?:읍|면|동))\s*(\d+(?:-\d+)?)"
상세주소_패턴 = r"\[[^\[\]]+\]|\([^()]+\)"

def process_ocr_texts(ocr_texts):
    results = []
    for idx, text in enumerate(ocr_texts):
        광역자치단체 = re.findall(광역자치단체_패턴, text)
        기초자치단체_전체 = re.findall(기초자치단체_패턴, text)
        읍면동_전체 = re.findall(읍면동_패턴, text)
        도로명주소 = re.findall(도로명주소_패턴, text)

        # 읍면동에서 기초자치단체 + 광역자치단체 이름 제거 (예: 서울금천구가산동 -> 가산동)
        읍면동 = []
        for item in 읍면동_전체:
          clean = item
          for g in 기초자치단체_전체:
             clean = clean.replace(g, '')
          if clean:
              읍면동.append(clean)


        # 기초자치단체에서 광역자치단체 이름 제거 (예: 서울금천구 -> 금천구)
        기초자치단체 = []
        for item in 기초자치단체_전체:
            clean = item
            for g in 광역자치단체:
                clean = clean.replace(g, '')
            if clean:
                기초자치단체.append(clean)

       

        건물번호전체 = re.findall(건물번호_패턴, text)
        건물번호 = [num for _, num in 건물번호전체]  # 도로명 뒤 숫자만 추출

        지번주소전체 = re.findall(지번주소_패턴, text)
        지번주소 = [num for _, num in 지번주소전체]  # 동/읍/면 뒤 숫자만 추출

        상세주소_전체 = re.findall(상세주소_패턴, text)
        상세주소_clean=[s.strip('[]()') for s in 상세주소_전체]
        상세주소 = [s.strip('[]()') for s in 상세주소_clean if not (re.search(도로명주소_패턴, s) 
                                           or re.search(읍면동_패턴, s)
                or  s.isdigit() or len(s.strip()) == 1)]

        if any([광역자치단체, 기초자치단체, 읍면동, 도로명주소, 건물번호, 지번주소, 상세주소]):
            results.append({
                "OCR_Text": f"Text {idx + 1}: {text}",
                "광역자치단체": 광역자치단체,
                "기초자치단체": 기초자치단체,
                "동/읍/면": 읍면동,
                "도로명주소": 도로명주소,
                "건물번호": 건물번호,
                "지번주소": 지번주소,
                "상세주소": 상세주소
            })
    return results


# 실행
processed_results = process_ocr_texts(ocr_texts)

# 출력 예시
for result in processed_results:
    print(f"OCR Text: {result['OCR_Text']}")
    for key, value in result.items():
        if key != "OCR_Text" and value:
            print(f"{key}: {value}")
    print("=" * 50)





























